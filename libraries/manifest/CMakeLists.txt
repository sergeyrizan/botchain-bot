file(GLOB HEADERS "include/steemit/manifest/*.hpp")

################# external plugins ###################

# external_plugins target depends on all plugins
if(BUILD_SHARED_LIBRARIES)
    add_library(golos_external_plugins SHARED
            external_plugins.cpp
            )
else()
    add_library(golos_external_plugins STATIC
            external_plugins.cpp
            )
endif()

# generate file based on comments
file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/inc/mf_external_plugins.inc" "// this file is autogenerated\n#pragma once\n#define STEEMIT_EXTERNAL_PLUGIN_LIST \\\n   ")

foreach(pin $ENV{STEEMIT_EXTERNAL_PLUGINS})
    file(APPEND "${CMAKE_CURRENT_BINARY_DIR}/inc/mf_external_plugins.inc" "( ${pin} )")
    target_link_libraries(golos_external_plugins "${pin}")
endforeach()

file(APPEND "${CMAKE_CURRENT_BINARY_DIR}/inc/mf_external_plugins.inc" "\n")

################# internal plugins ###################

if(BUILD_SHARED_LIBRARIES)
    add_library(golos_internal_plugins SHARED
            internal_plugins.cpp
            )
else()
    add_library(golos_internal_plugins STATIC
            internal_plugins.cpp
            )
endif()

file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/inc/mf_internal_plugins.inc" "// this file is autogenerated\n#pragma once\n#define STEEMIT_INTERNAL_PLUGIN_LIST \\\n   ")

foreach(pin $ENV{STEEMIT_INTERNAL_PLUGINS})
    file(APPEND "${CMAKE_CURRENT_BINARY_DIR}/inc/mf_internal_plugins.inc" "( ${pin} )")
    target_link_libraries(golos_internal_plugins "golos_${pin}")
endforeach()

file(APPEND "${CMAKE_CURRENT_BINARY_DIR}/inc/mf_internal_plugins.inc" "\n")

################# common ###################

if(BUILD_SHARED_LIBRARIES)
    add_library(golos_mf_plugins SHARED
            mf_plugins.cpp
            ${HEADERS}
            ${CMAKE_CURRENT_BINARY_DIR}/inc/mf_internal_plugins.inc
            ${CMAKE_CURRENT_BINARY_DIR}/inc/mf_external_plugins.inc
            )
else()
    add_library(golos_mf_plugins STATIC
            mf_plugins.cpp
            ${HEADERS}
            ${CMAKE_CURRENT_BINARY_DIR}/inc/mf_internal_plugins.inc
            ${CMAKE_CURRENT_BINARY_DIR}/inc/mf_external_plugins.inc
            )
endif()
target_link_libraries(golos_mf_plugins fc)

target_include_directories(golos_mf_plugins
        PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include"
        PRIVATE "${CMAKE_CURRENT_BINARY_DIR}/inc")

install(TARGETS
        golos_mf_plugins

        RUNTIME DESTINATION bin
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib
        )
